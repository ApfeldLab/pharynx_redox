Platform Preferences( PathVar( MATLABROOT( "D:\Program Files\MATLAB" ) ) );
//MATLAB Init();

dt = Current Data Table();
directory = Pick Directory( "Select a directory." );

fileNames = Files In Directory( directory );
For( iFile = 1, iFile <= N Items( fileNames ), iFile++, 

	filename = fileNames[iFile];

	If( Ends With( filename, "_measurements.csv" ),
		meas_filename = directory || filename
	);
  
	If( Ends With( filename, "_mvmt.csv" ),
		mvmt_filename = directory || filename
	);
);

// Open pharynx-level measurements
meas_dt = Open(
	meas_filename,
	visibility( "private" ),
	columns(
		Column( "Median 410", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Median 470", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Intensity410_wholePharynx", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Intensity470_wholePharynx", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Area (Px)", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Area", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "X", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Y", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "XM", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "YM", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Perim.", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "BX", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "BY", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Width", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Height", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Major", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Minor", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Angle", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Circ.", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Feret", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Median", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Skew", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Kurt", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "FeretX", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "FeretY", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "FeretAngle", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "MinFeret", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "AR", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Round", Numeric, "Continuous", Format( "Best", 12 ) ),
		Column( "Solidity", Numeric, "Continuous", Format( "Best", 12 ) )
	),
	Import Settings(
		End Of Line( CRLF, CR, LF ),
		End Of Field( Comma, CSV( 0 ) ),
		Strip Quotes( 1 ),
		Use Apostrophe as Quotation Mark( 0 ),
		Use Regional Settings( 0 ),
		Scan Whole File( 1 ),
		Treat empty columns as numeric( 0 ),
		CompressNumericColumns( 0 ),
		CompressCharacterColumns( 0 ),
		CompressAllowListCheck( 0 ),
		Labels( 1 ),
		Column Names Start( 1 ),
		Data Starts( 2 ),
		Lines To Read( "All" ),
		Year Rule( "20xx" )
	)
);

// Open Movement File
mvmt_dt = Open(
	mvmt_filename,
	visibility( "private" ),
	columns( Column( "Movement Rep 1", Numeric, "Continuous", Format( "Best", 12 ) ) ),
	Import Settings(
		End Of Line( CRLF, CR, LF ),
		End Of Field( Comma, CSV( 0 ) ),
		Strip Quotes( 1 ),
		Use Apostrophe as Quotation Mark( 0 ),
		Use Regional Settings( 0 ),
		Scan Whole File( 1 ),
		Treat empty columns as numeric( 0 ),
		CompressNumericColumns( 0 ),
		CompressCharacterColumns( 0 ),
		CompressAllowListCheck( 0 ),
		Labels( 0 ),
		Column Names Start( 1 ),
		Data Starts( 1 ),
		Lines To Read( "All" ),
		Year Rule( "20xx" )
	)
);

// Experiment dt
dt = New Table( "Experiment - RENAME ME",
	New Table Variable( "Max", 6.65 ),
	New Table Variable( "Min", 0.852 ),
	New Table Variable( "IF", 0.171 ),
	New Table Variable( "Temperature", 22 ),
	New Column( "ExpID", Character ),
	New Column( "Strain", Character ),
	New Column( "Cohort", Character ),
	New Column( "Replicate", Numeric, Ordinal ),
	New Column( "Age", Numeric, Continuous ),
	New Column( "Column", Numeric, Ordinal ),
	New Column( "Plate", Numeric, Ordinal ),
	New Column( "Plate ID (col_plt)", Character, Formula( Char( Column ) || "_" || Char( Plate ) ) ),
	New Column( "Imaged At", Character ),
	New Column( "ID", Character, Formula( :Name( "Plate ID (Col_plt)" ) || "_" || :Imaged At ) ),
	New Column( "Frame", Numeric, Ordinal, Formula( Row() ) ),
	New Column( "Alive?", Numeric, Nominal ),
	New Column( "Hours post L4", Numeric, Nominal ),
	New Column( "Time in Lev", Numeric, Continuous ),
	New Column( "Time imaging", Numeric, Continuous ),
	New Column( "Time to recover", Numeric, Continuous ),
	New Column( "Notch?", Numeric, Nominal ),
	New Column( "Mosaic?", Numeric, Nominal ),
	New Column( "Head AF (dark in RT)", Numeric, Nominal ),
	New Column( "Notes morph", Character ),
	New Column( "Notes AF", Character ),
	New Column( "R1000", Numeric, Continuous, Formula( 1000 * (:Intensity 410_whole pharynx / :Intensity 470_whole pharynx) ) ),
	New Column( "Bckgnd 410 (M%S)", Numeric, Continuous, Formula( (:Median 410 * 100) / :Intensity 410_whole pharynx ) ),
	New Column( "Bckgnd 470 (M%S)", Numeric, Continuous, Formula( (:Median 470 * 100) / :Intensity 470_whole pharynx ) ),
	New Column( "OxD",Numeric,"Continuous",Format( "Best", 12 ),Formula((:R1000 / 1000 - :Min) / ((:R1000 / 1000 - :Min) + (:Max - :R1000 / 1000) * :IF))),
	New Column( "E",
		Numeric,
		Continuous,
		Formula( (-265) - ((8314.463 * (273.15 + :Temperature)) / (2 * 96485.3415)) * Log( (1 - :OxD) / :OxD ) )
	),
	
	Add Rows (nrows(meas_dt))
);

meas_dt_join = dt << Join(with(mvmt_dt), By Rows, Preserve main table order(1));

all_dt = meas_dt_join << Join(with(meas_dt), By Rows, Preserve main table order(1));

all_dt << Set Table Variable ("Min", 0.852);
all_dt << Set Table Variable( "Max", 6.65 );
all_dt << Set Table Variable( "IF", 0.171 );
all_dt << Set Table Variable( "Temperature", 22 );

column(all_dt, "R1000") << suppress eval(false);
column(all_dt, "Bckgnd 410 (M%S)") << suppress eval(false);
column(all_dt, "Bckgnd 470 (M%S)") << suppress eval(false);
column(all_dt, "OxD") << suppress eval(false);
column(all_dt, "E") << suppress eval(false);

// Clean Up
close(meas_dt_join, nosave);
close(dt, nosave);
close(meas_dt, nosave);
close(mvmt_dt, nosave);
